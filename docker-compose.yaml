version: '3.8'
services:
    app:
        build:
            context: ./app
            dockerfile: Dockerfile
        container_name: nestjs
        ports:
            - '80:3000'
        env_file:
            - ./app/.env.production
        depends_on:
            db:
                condition: service_healthy
    db:
        image: mysql
        container_name: mysql
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: 123456
            MYSQL_DATABASE: banco
            MYSQL_USER: usuario
            MYSQL_PASSWORD: 123456
        ports:
            - 81:3306
        volumes:
            - ./mysql:/var/lib/mysql
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
            interval: 5s
            timeout: 20s
            retries: 10
    jenkins_test:
        image: jenkins/jenkins:lts
        privileged: true
        user: root
        ports:
            - 8080:8080
            - 50000:50000
        container_name: jenkins_test
        volumes:
            - ./jenkins:/var/jenkins_home
            - ./jenkins/docker.sock:/var/run/docker.sock
    sonarqube_test:
        image: sonarqube:community
        depends_on:
            - db_sonarqube
        environment:
            SONAR_JDBC_URL: jdbc:postgresql://db_sonarqube:5432/sonar
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar
        volumes:
            - ./sonarqube/sonarqube_data:/opt/sonarqube/data
            - ./sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
            - ./sonarqube/sonarqube_logs:/opt/sonarqube/logs
        ports:
            - "9000:9000"
    db_sonarqube:
        image: postgres:12
        environment:
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
        volumes:
            - ./postgress/postgresql:/var/lib/postgresql
            - ./postgress/postgresql_data:/var/lib/postgresql/data
volumes:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_logs:
    postgresql:
    postgresql_data:
