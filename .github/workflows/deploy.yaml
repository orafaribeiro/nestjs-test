name: Deploy to Kubernetes
on:
  push:
    branches:
      - master
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
env:
  ECR_REPOSITORY: flask-app
  EKS_CLUSTER_NAME: my-api1
  AWS_REGION: us-east-2
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Teste
        run: echo ${{ github.event.head_commit.message }}

      - name: configure aws credentials 2
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Sts GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-api1
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./app/Dockerfile "app"
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Decrypt large secret
        run: chmod +x ./decrypt_secret.sh

      - name: Decrypt large secret
        run: ./decrypt_secret.sh
        env:
          KUBECONFIG_PASSPHRASE: ${{ secrets.KUBECONFIG_PASSPHRASE }}

      - name: Test printing your secret (Remove this step in production)
        run: cat $HOME/secrets/kubeconfig

      - name: Configure kubectl
        run: mkdir -p ~/.kube && mv $HOME/secrets/kubeconfig ~/.kube/config

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Config View
        run: kubectl config view --minify

      - name: Deploy
        run: |
          kubectl config get-contexts

      - name: Deploy 2
        run: |
          kubectl get pods

      - name: Deploy 2
        run: |
          export IMAGE_TAG=${{ github.sha }}
          envsubst < ./app/k8s/deployment.yaml | kubectl apply -f -
