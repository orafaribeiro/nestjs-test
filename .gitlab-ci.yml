stages:
  - kubeconfig
  - kubernetes

variables:
  DOCKER_REGISTRY: 471112647960.dkr.ecr.us-east-2.amazonaws.com/my-api1
  IMAGE_TAG: $CI_COMMIT_SHA
  KUBECONFIG_PASSPHRASE: "Admin123456"

# WORKING
# updating-env-file:
#   stage: kubeconfig
#   image:
#     name: docker:latest
#   services:
#     - docker:dind
#   before_script:
#     - echo "DATABASE_URL=\"mysql://admin:Admin123456@database-api.cjyuskquoc67.us-east-2.rds.amazonaws.com:3306/nestjs_api"\" >> ./app/.env
#     - cat ./app/.env
#     - apk add --no-cache curl jq python3 py3-pip
#     - pip install awscli --break-system-packages
#     - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
#     - aws --version
#   script:
#     - docker build -t $DOCKER_REGISTRY:$IMAGE_TAG -f ./app/Dockerfile "app"
#     - docker push $DOCKER_REGISTRY:$IMAGE_TAG

# veryfing-env-file:
#   stage: kubeconfig
#   script:
#     - cat ./app/.env

# listing-dir:
#   image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
#   script:
#     - aws eks list-clusters

# veryfing-env-file:
#   script:
#     - cat ./app/.env

kubeconfig:
  stage: kubeconfig
  image:
    #name: bitnami/kubectl:1.14
    name: docker:latest
    entrypoint: [""]
  before_script:
    # - chmod +x ./decrypt_secret.sh
    - mkdir -p secrets
    - apk update
    - apk fetch gnupg
    - apk add gnupg
    - gpg --list-keys
  script:
    #- kubectl get pods
    # - ./decrypt_secret.sh
    - gpg --quiet --batch --yes --decrypt --passphrase="$KUBECONFIG_PASSPHRASE" --output secrets/kubeconfig ./app/k8s/kubeconfig.gpg
    - cat secrets/kubeconfig
  artifacts:
    paths:
      - secrets/kubeconfig

kubernetes:
  stage: kubernetes
  image:
    name: bitnami/kubectl:1.14
    entrypoint: [""]
  dependencies:
    - kubeconfig
  before_script:
    # - cat secrets/kubeconfig
    - mkdir -p ~/.kube && mv secrets/kubeconfig ~/.kube/config
  # - cat ~/.kube/config
  script:
    - ls
    - cat secrets/kubeconfig
    - kubectl get pods
    - kubectl config get-contexts
# deploy-prod:
#   stage: deploy
#   script:
#     - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
#   environment: production
